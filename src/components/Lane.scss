@import '../sass-globals.scss';

.lane-container {
  display: inline-flex;
  position: relative;
  box-shadow: 0 3px 3px -2px #dadada;

  .lane-expander {
    position: absolute;
    bottom: calc(var(--note-height) * -0.5);
    left: 0;
    width: calc(var(--keys-width, 10px) + 4px);
    height: var(--note-height);
    background: transparent;
    z-index: 1;

    &.active {
      cursor: ns-resize;
    }
  }

  .keys {
    border-top: 1px solid $lightMediumGray;
    border-bottom: 1px solid $lightMediumGray;
    box-shadow: 2px 0px 3px #cccccc;
    position: sticky;
    left: 0;
    z-index: 1;
    padding-left: 4px;
    cursor: grab;

    &::before {
      content: '';
      width: 4px;
      height: 100%;
      background-color: var(--lane-color);
      position: absolute;
      left: 0;
      top: 0;
      z-index: 2;
    }

    &.grabbing {
      cursor: grabbing;
    }

    .key {
      width: var(--keys-width, 10px);
      height: var(--note-height);
      box-sizing: border-box;
      background: #ffffff;
      position: relative;

      &.e-key {
        border-bottom: 1px solid $lightBlue;
      }

      &.black-key {
        background: #000000;
      }

      .note-name {
        position: absolute;
        font-size: 14px;
        font-weight: bold;
        color: $darkGray;
        left: -24px;
        pointer-events: none;
        user-select: none;
      }
    }
  }

  .lane {
    height: 100%;
    width: var(--lane-width);
    flex: 0 0 var(--lane-width);
    border: 1px solid $lightGray;
    box-sizing: border-box;
    position: relative;

    .note-lane {
      background: #ffffff;
      box-sizing: border-box;
      width: 100%;
      height: var(--note-height);

      &.e-key {
        border-bottom: 1px solid var(--lane-color-lane);
      }

      &.black-key {
        background: var(--lane-color-lane);
      }

      &:last-of-type {
        border-bottom: none;
      }
    }
  }

  .empty-measure {
    height: 100%;
    width: var(--eighth-width);
  }

  .full-lane-container {
    position: absolute;
    top: 0;
    left: calc(var(--keys-width) + 4px);
    height: 100%;
    width: 100%;
    pointer-events: none;
  }

  .notes {
    @extend .full-lane-container;

    .note {
      position: absolute;
      height: var(--note-height);
      background-color: var(--lane-color);
      pointer-events: all;
      box-shadow: 0px 0px 2px var(--lane-color-light);
      box-sizing: border-box;
      border: 1px solid var(--lane-color-lightest);
      cursor: grab;
      $backgroundTransitionTime: 0.005s;
      transition: none;

      &.playing {
        transition: background-color 0.3s ease-out;
      }

      &.grabbing {
        cursor: grabbing;
      }

      &:hover {
        background-color: var(--lane-color-hover);

        &.playing {
          transition: background-color $backgroundTransitionTime ease-in;
        }
      }

      &.highlight {
        transition: background-color $backgroundTransitionTime ease-in;
        background-color: var(--lane-color-light);
      }

      &.no-pointer {
        pointer-events: none;
      }

      $noteDragWidth: 10px;
      .note-drag-right {
        width: $noteDragWidth;
        position: absolute;
        top: -1px;
        right: $noteDragWidth * -0.5;
        height: var(--note-height);
        background-color: transparent;
        cursor: ew-resize;

        &.outside {
          right: -$noteDragWidth;
        }
      }

      .note-drag-left {
        width: $noteDragWidth;
        position: absolute;
        top: -1px;
        left: $noteDragWidth * -0.5;
        height: var(--note-height);
        background-color: transparent;
        cursor: ew-resize;

        &.outside {
          left: -$noteDragWidth;
        }
      }

      &.selected {
        border: 2px solid var(--lane-color);
        background-color: var(--lane-color-lightest);

        &:hover {
          background-color: var(--lane-color-light);

          &.playing {
            transition: background-color $backgroundTransitionTime ease-in;
          }
        }

        &.highlight {
          transition: background-color $backgroundTransitionTime ease;
          background-color: var(--lane-color-lightest);
        }

        .note-drag-left,
        .note-drag-right {
          top: -2px;
        }

        .note-drag-right {
          right: $noteDragWidth * -0.5 - 1px;

          &.outside {
            right: -$noteDragWidth - 1px;
          }
        }

        .note-drag-left {
          left: $noteDragWidth * -0.5 - 1px;

          &.outside {
            left: -$noteDragWidth - 1px;
          }
        }
      }
    }
  }

  .delimiter-probabilities {
    @extend .full-lane-container;

    .delimiter-probability {
      position: absolute;
      top: 0;
      bottom: 0;
      background: var(--lane-color-light);
      pointer-events: all;
      width: $padding * 0.5;
      opacity: 0.5;
      transition: width $fastTransitionTime ease, opacity $fastTransitionTime ease;

      &::before {
        content: '';
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        width: $padding * 1.5;
        background: transparent;
      }

      &.disabled {
        pointer-events: none;
      }

      .delimiter-probability-bar {
        position: absolute;
        bottom: 1px;
        left: 0;
        width: 100%;
        background: var(--lane-color);

        .delimiter-probability-number {
          @extend .no-select;
          position: absolute;
          top: -8px;
          left: 0.5px;
          width: 100%;
          text-align: center;
          font-size: 10px;
          color: var(--lane-color-dark);
          pointer-events: none;
          opacity: 0;
          transition: opacity $fastTransitionTime ease, top $fastTransitionTime ease;

          &.number-below {
            top: 4px;
            color: #ffffff;
          }
        }

        .delimiter-probability-bar-drag {
          $delimiterDragHeight: 6px;
          position: absolute;
          top: $delimiterDragHeight * -0.5;
          left: 0;
          width: 100%;
          height: $delimiterDragHeight;
          background: transparent;
          cursor: ns-resize;
        }
      }

      &:hover,
      &.open {
        width: $padding + 1px;
        opacity: 1;

        .delimiter-probability-number {
          opacity: 1;
          top: -12px;
          transition: opacity $fastTransitionTime ease $fastTransitionTime * 0.5,
            top $fastTransitionTime ease $fastTransitionTime * 0.5;
        }
      }
    }
  }

  .delimiter-highlight-container {
    @extend .full-lane-container;

    .delimiter-highlight {
      position: absolute;
      top: 0;
      height: 100%;
      background: var(--lane-color-gray);
      opacity: 0.35;
    }
  }

  .lane-controls {
    position: absolute;
    left: -30px;
    top: 0;
    bottom: 0;
    width: 30px;
    z-index: 1;
    display: flex;
    flex-direction: column;
    align-items: center;

    $laneActionHeight: 14px;
    .lane-action {
      cursor: pointer;
      width: 100%;
      height: $laneActionHeight;
      margin-bottom: 8px;

      &.mute {
        background: transparent url('../assets/m-icon-blue.png') no-repeat center center;
        background-size: auto $laneActionHeight;

        &:hover,
        &.active {
          background: transparent url('../assets/m-icon-red.png') no-repeat center center;
          background-size: auto $laneActionHeight;
        }
      }

      &.solo {
        background: transparent url('../assets/s-icon-blue.png') no-repeat center center;
        background-size: auto $laneActionHeight;

        &:hover,
        &.active {
          background: transparent url('../assets/s-icon-green.png') no-repeat center center;
          background-size: auto $laneActionHeight;
        }
      }

      &.trash {
        background: transparent url('../assets/trash-icon-blue.png') no-repeat center center;
        background-size: auto $laneActionHeight;

        &:hover {
          background: transparent url('../assets/trash-icon-red.png') no-repeat center center;
          background-size: auto $laneActionHeight;
        }
      }

      &.duplicate {
        background: transparent url('../assets/plus-icon-blue.png') no-repeat center center;
        background-size: auto $laneActionHeight;

        &:hover {
          background: transparent url('../assets/plus-icon-green.png') no-repeat center center;
          background-size: auto $laneActionHeight;
        }
      }
    }
  }

  &.first {
    .lane {
      border-top: none;
      margin-top: 1px;
    }
  }

  &.mute {
    .keys::before {
      background-color: #bbbbbb;
    }

    .key.black-key {
      background-color: $darkGray;
    }

    .note-lane.black-key {
      background: #f2f2f2;
    }

    .delimiter-probability {
      background: $lightAlternateGray;

      .delimiter-probability-bar {
        background: #a9a9a9;

        .delimiter-probability-number {
          color: $darkGray;
        }

        .delimiter-probability-bar-drag {
          pointer-events: none;
        }
      }
    }

    .note {
      $muteNoteColor: #a2a2a2;
      background: $muteNoteColor;
      box-shadow: 0px 0px 2px $mediumGray;
      border: 1px solid $lightMediumGray;

      &:hover {
        background: #b0b0b0;
      }

      &.selected {
        border: 2px solid $muteNoteColor;
        background: $lightMediumGray;

        &:hover {
          background: #d4d4d4;
        }
      }
    }
  }
}
